{"version":3,"sources":["img/karangos.png","ui/MainMenu.js","ui/TopBar.js","ui/FooterBar.js","ui/ConfirmDialog.js","routed/KarangosList2.js","routed/KarangosForm.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","menuButton","marginRight","spacing","menuLink","color","palette","text","primary","textDecoration","MainMenu","classes","React","useState","anchorEl","setAnchorEl","handleClose","IconButton","aria-controls","aria-haspopup","onClick","event","currentTarget","edge","className","aria-label","id","keepMounted","open","Boolean","onClose","MenuItem","to","root","flexGrow","logo","width","TopBar","AppBar","position","Toolbar","src","logotipo","alt","toolBar","backgroundColor","background","paper","minHeight","bottom","link","secondary","light","FooterBar","Typography","variant","display","align","fontSize","href","useStyle","dialogContent","justifyCOntent","warningIcon","yellow","marginRigth","ConfirmDialog","title","isOpen","children","result","Dialog","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","Button","autoFocus","table","minWidth","dataGrid","visibility","toolbar","justifyContent","paddingRight","margin","KarangosList","karangos","setKarangos","deletable","setDeletable","dialogOpen","setDialogOpen","sbOpen","setSbOpen","sbSeverity","setSbSeverity","sbMessage","setSbMessage","history","useHistory","getData","a","axios","get","response","data","length","console","error","delete","message","handleSbClose","useEffect","columns","field","headerName","headerAlign","flex","sortComparator","v1","v2","Number","renderCell","params","Checkbox","checked","value","readOnly","valueFormatter","toLocaleString","style","currency","push","deleteItem","Snackbar","autoHideDuration","elevation","severity","size","startIcon","Paper","rows","pageSize","autoHeight","disableSelectionOnClick","form","flexWrap","maxWidth","marginTop","KarangosForm","years","i","Date","getFullYear","marca","modelo","cor","ano_fabricacao","importado","placa","preco","karango","setKarango","setCurrentId","importadoChecked","setImportadoChecked","disabled","label","sendBtnStatus","setSendBtnStatus","sbStatus","setSbStatus","setError","isModified","setIsModified","setTitle","useParams","handleInputChange","property","karangoTemp","target","newState","toUpperCase","validate","isValid","errorTemp","trim","includes","isNaN","put","post","onSubmit","preventDefault","saveData","TextField","onChange","required","placeholder","fullWidth","helperText","select","map","year","FormControl","FormControlLabel","control","mask","formatChars","type","onFocus","InputProps","startAdornment","InputAdornment","createMuiTheme","main","pink","default","paddingBottom","routed","padding","fontFamily","typography","Main","Box","path","App","ThemeProvider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.15f67fee.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/karangos.637f9a06.png\";","import React from 'react';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    menuButton: {\r\n      marginRight: theme.spacing(2),\r\n    },\r\n    menuLink: {\r\n      color: theme.palette.text.primary,\r\n      textDecoration: 'none' // sem sublinhado\r\n    }\r\n}));\r\n\r\nexport default function MainMenu() {\r\n  const classes = useStyles();\r\n\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n\r\n        <IconButton aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleClick} edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\r\n            <MenuIcon />\r\n        </IconButton>    \r\n\r\n      <Menu\r\n        id=\"simple-menu\"\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        open={Boolean(anchorEl)}\r\n        onClose={handleClose}\r\n      >\r\n        <MenuItem onClick={handleClose}>\r\n          {/* o Link vai carregar somente o conteúdo do main - Single page Aplicattion SPA */}\r\n          <Link className={classes.menuLink} to=\"list\">Listar Karangos</Link>\r\n        </MenuItem>\r\n\r\n        <MenuItem onClick={handleClose}>\r\n          <Link className={classes.menuLink} to=\"new\">Cadastrar Karango</Link>\r\n        </MenuItem>\r\n\r\n      </Menu>\r\n    </div>\r\n  );\r\n}","// o nome do arquivo é igual ao nome do componente que ele vai representar\r\n// nome de componentes começam com maiúsculas => no caso TopBar\r\n\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport logotipo from '../img/karangos.png'\r\nimport MainMenu from './MainMenu.js'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  logo: {\r\n      width: '300px'\r\n  }\r\n}));\r\n\r\nexport default function TopBar() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <MainMenu />\r\n          <img src={logotipo} alt=\"Karangos\" className={classes.logo}></img>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}","import { Typography, Toolbar } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport LocalCafeTwoToneIcon from '@material-ui/icons/LocalCafeTwoTone';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n    toolBar: {\r\n        backgroundColor: theme.palette.background.paper,\r\n        minHeight: '42px',\r\n        // posicionar o footer bar na parte inferior da página\r\n        width: '100%',\r\n        position: 'fixed',\r\n        bottom: '0'\r\n    },\r\n    text: {\r\n        width: '100%', // ou width: '0, auto' => no caso retira o aling do inline\r\n    },\r\n    link: {\r\n        color: theme.palette.secondary.light,\r\n        textDecoration: 'none', // tira o sublinhado do link\r\n        '&:hover': {\r\n            textDecoration: 'underline', // retorna o sublinhado\r\n        }\r\n    },\r\n    \r\n}));\r\n\r\nexport default function FooterBar(){\r\n    \r\n    const classes = useStyles();\r\n\r\n    return(\r\n        <Toolbar className={classes.toolBar}>\r\n            <Typography className={classes.text}\r\n                        variant=\"caption\"\r\n                        display=\"block\"\r\n                        align=\"center\"\r\n                        color=\"textSecondary\">\r\n                            Produzido com <LocalCafeTwoToneIcon fontSize=\"small\" />\r\n                            por <a className={classes.link} href=\"mailto:luis17ads@gmail.com\">\r\n                            Gustavo Gianvecchio</a> &copy; 2021\r\n            </Typography>\r\n        </Toolbar>\r\n    )\r\n}","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport WarningIcon from '@material-ui/icons/Warning';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport yellow from '@material-ui/core/colors/yellow'\r\n\r\nconst useStyle = makeStyles(theme => ({\r\n\r\n    dialogContent: {\r\n        display: 'flex',\r\n        justifyCOntent: 'space-between'\r\n    },\r\n    warningIcon: {\r\n        color: yellow[500],\r\n        marginRigth: theme.spacing(2)\r\n    },\r\n}))\r\nexport default function ConfirmDialog({title=\"Confirmar\", isOpen=false, onClose, children}) {\r\n\r\n    const classes = useStyle()\r\n\r\n    const handleClose = (result) => {\r\n        onClose(result)\r\n    };\r\n\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        open={isOpen}\r\n        onClose={() => handleClose(false)}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">{title}</DialogTitle>\r\n        <DialogContent className={classes.dialogContent}>\r\n          <WarningIcon className={classes.warningIcon} fontSize=\"large\" />\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            {children}\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={() => handleClose(true)} color=\"primary\">\r\n            Confirmar\r\n          </Button>\r\n          <Button onClick={() => handleClose(false)} color=\"primary\" autoFocus>\r\n            Cancelar\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}","import { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport Checkbox from '@material-ui/core/Checkbox'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport DeleteIcon from '@material-ui/icons/Delete'\r\nimport EditIcon from '@material-ui/icons/Edit'\r\nimport Toolbar from '@material-ui/core/Toolbar'\r\nimport Button from '@material-ui/core/Button'\r\nimport AddBoxIcon from '@material-ui/icons/AddBox'\r\nimport { useHistory } from 'react-router-dom'\r\nimport ConfirmDialog from '../ui/ConfirmDialog'\r\nimport Snackbar from '@material-ui/core/Snackbar'\r\nimport MuiAlert from '@material-ui/lab/Alert'\r\nimport { DataGrid } from '@material-ui/data-grid'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n  dataGrid: {\r\n    '& .MuiDataGrid-row button': {       // Esconde os botões na linha de tabela \"normal\"\r\n      visibility: 'hidden'\r\n    },\r\n    '& .MuiDataGrid-row:hover button': { // Exibe os botões de volta quando o mouse passar por cima\r\n      visibility: 'visible'\r\n    }\r\n  },\r\n  toolbar: {\r\n    justifyContent: 'flex-end',\r\n    paddingRight: 0,\r\n    margin: theme.spacing(2, 0)\r\n  }\r\n}));\r\n\r\nexport default function KarangosList() {\r\n  const classes = useStyles()\r\n\r\n  // Variáveis que conterão dados PRECISAM ser inicializadas como vetores vazios\r\n  const [karangos, setKarangos] = useState([])\r\n  const [deletable, setDeletable] = useState()        // Código do registro a ser excluído\r\n  const [dialogOpen, setDialogOpen] = useState(false) // O diálogo de confirmação está aberto?\r\n  const [sbOpen, setSbOpen] = useState(false)\r\n  const [sbSeverity, setSbSeverity] = useState('success')\r\n  const [sbMessage, setSbMessage] = useState('Exclusão realizada com sucesso.')\r\n  \r\n  const history = useHistory()\r\n\r\n  useEffect(() => {\r\n    getData()\r\n  }, []) // Quando a lista de dependências é um vetor vazio, o useEffect()\r\n         // é executado apenas uma vez, no carregamento inicial do componente\r\n\r\n  async function getData() {\r\n    try { // tenta buscar os dados\r\n      let response = await axios.get('https://api.faustocintra.com.br/karangos?by=marca,modelo')\r\n      if(response.data.length > 0) setKarangos(response.data)\r\n    }\r\n    catch(error) {\r\n      console.error(error)\r\n    }\r\n  }\r\n\r\n  async function deleteItem() {\r\n    try {\r\n      await axios.delete(`https://api.faustocintra.com.br/karangos/${deletable}`)\r\n      getData()     // Atualiza os dados da tabela\r\n      setSbSeverity('success')\r\n      setSbMessage('Exclusão efetuada com sucesso.')\r\n    }\r\n    catch(error) {\r\n      setSbSeverity('error')\r\n      setSbMessage('ERRO: ' + error.message)\r\n    }\r\n    setSbOpen(true)   // Exibe a snackbar\r\n  }\r\n\r\n  function handleDialogClose(result) {\r\n    setDialogOpen(false)\r\n\r\n    // Se o usuário concordou com a exclusão \r\n    if(result) deleteItem()\r\n  }\r\n\r\n  function handleDelete(id) {\r\n    setDeletable(id)\r\n    setDialogOpen(true)\r\n  }\r\n\r\n  function handleSbClose() {\r\n    setSbOpen(false)    // Fecha a snackbar\r\n  }\r\n\r\n  const columns = [\r\n    { \r\n      field: 'id', \r\n      headerName: 'Cód.',\r\n      align: 'right',\r\n      headerAlign: 'right',  \r\n      flex: true,\r\n      sortComparator: (v1, v2) => Number(v1) > Number(v2) ? 1 : -1\r\n    },\r\n    { \r\n      field: 'marca', \r\n      headerName: 'Marca',\r\n      flex: true \r\n    },\r\n    { \r\n      field: 'modelo', \r\n      headerName: 'Modelo',\r\n      flex: true \r\n    },\r\n    { \r\n      field: 'cor', \r\n      headerName: 'Cor',\r\n      align: 'center',\r\n      headerAlign: 'center', \r\n      flex: true \r\n    },\r\n    { \r\n      field: 'ano_fabricacao', \r\n      headerName: 'Ano',\r\n      align: 'center',\r\n      headerAlign: 'center', \r\n      flex: true,\r\n      sortComparator: (v1, v2) => Number(v1) > Number(v2) ? 1 : -1\r\n    },\r\n    { \r\n      field: 'importado', \r\n      headerName: 'Importado?',\r\n      align: 'center', \r\n      headerAlign: 'center', \r\n      flex: true,\r\n      renderCell: params => (\r\n        <Checkbox checked={params.value === \"1\"} readOnly />\r\n      )\r\n    },\r\n    { \r\n      field: 'placa', \r\n      headerName: 'Placa',\r\n      align: 'center', \r\n      headerAlign: 'center', \r\n      flex: true,\r\n    },\r\n    { \r\n      field: 'preco', \r\n      headerName: 'Preço',\r\n      align: 'right', \r\n      flex: true,\r\n      valueFormatter: params => (\r\n        Number(params.value).toLocaleString('pt-br', { style: 'currency', currency: 'BRL' })\r\n      ),\r\n      sortComparator: (v1, v2) => Number(v1) > Number(v2) ? 1 : -1\r\n    },\r\n    { \r\n      field: 'editar',\r\n      headerName: 'Editar',\r\n      align: 'center', \r\n      headerAlign: 'center', \r\n      flex: true,\r\n      renderCell: params => (\r\n        <IconButton aria-label=\"editar\" onClick={() => history.push(`/edit/${params.id}`)}>\r\n          <EditIcon />\r\n        </IconButton>\r\n      )\r\n    },\r\n    { \r\n      field: 'excluir',\r\n      headerName: 'Excluir',\r\n      align: 'center', \r\n      headerAlign: 'center', \r\n      flex: true,\r\n      renderCell: params => (\r\n        <IconButton aria-label=\"excluir\" onClick={() => handleDelete(params.id)}>\r\n          <DeleteIcon color=\"error\" />\r\n        </IconButton>\r\n      )\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <ConfirmDialog isOpen={dialogOpen} onClose={handleDialogClose}>\r\n        Deseja realmente excluir este karango?\r\n      </ConfirmDialog>\r\n      \r\n      <Snackbar open={sbOpen} autoHideDuration={6000} onClose={handleSbClose}>\r\n        <MuiAlert elevation={6} variant=\"filled\" onClose={handleSbClose} severity={sbSeverity}>\r\n          {sbMessage}\r\n        </MuiAlert>\r\n      </Snackbar>\r\n      \r\n      <h1>Listagem de Karangos</h1>\r\n      <Toolbar className={classes.toolbar}>\r\n        <Button color=\"secondary\" variant=\"contained\" size=\"large\" \r\n          startIcon={<AddBoxIcon />} onClick={() => history.push('/new')}>\r\n          Novo Karango\r\n        </Button>\r\n      </Toolbar>\r\n      <Paper elevation={4}>\r\n        <DataGrid className={classes.dataGrid} rows={karangos} columns={columns} pageSize={10} autoHeight={true} disableSelectionOnClick={true} />\r\n      </Paper>\r\n    </>\r\n  )\r\n}","import { useState, useEffect } from 'react'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport MenuItem from '@material-ui/core/MenuItem'\r\nimport FormControl from '@material-ui/core/FormControl'\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\r\nimport Checkbox from '@material-ui/core/Checkbox'\r\nimport InputMask from 'react-input-mask'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport InputAdornment from '@material-ui/core/InputAdornment'\r\nimport Toolbar from '@material-ui/core/Toolbar'\r\nimport Button from '@material-ui/core/Button'\r\nimport axios from 'axios'\r\nimport { useHistory, useParams } from 'react-router-dom'\r\nimport Snackbar from '@material-ui/core/Snackbar'\r\nimport MuiAlert from '@material-ui/lab/Alert'\r\nimport React from 'react'\r\nimport ConfirmDialog from '../ui/ConfirmDialog'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  form: {\r\n    display: 'flex',\r\n    justifyContent: 'space-around',\r\n    flexWrap: 'wrap',\r\n    maxWidth: '400',\r\n    margin: '0 auto',\r\n    '& .MuiFormControl-root': {\r\n      minWidth: '200px',\r\n      maxWidth: '500px',\r\n      margin: '0 24px 24px 0',\r\n    }\r\n  },\r\n  toolbar: {\r\n    display: 'flex',\r\n    width: '100%',\r\n    justifyContent: 'space-around',\r\n    marginTop: '36px',\r\n  }\r\n}))\r\n\r\nexport default function KarangosForm() {\r\n\r\n    const classes = useStyles()\r\n\r\n    const colors = [\r\n        'Amarelo',\r\n        'Azul',\r\n        'Bege',\r\n        'Branco',\r\n        'Cinza',\r\n        'Dourado',\r\n        'Laranja',\r\n        'Marrom',\r\n        'Prata',\r\n        'Rosa',\r\n        'Roxo',\r\n        'Verde',\r\n        'Vermelho',\r\n        'Vinho'\r\n    ]\r\n\r\n    const years = []\r\n    for(let i = (new Date()).getFullYear(); i >= 1900; i--) years.push(i)\r\n\r\n    // Classes de caracteres para a máscara da placa\r\n    // 1) 1, 2, 3  posições, somente letras (maiúsculas ou minúsculas) -> [A-Za-z]\r\n    // 2) 5, 7, 8 posições, somente digitos - > [0-9]\r\n    // 3) 6 posição, digitos e letras de A a J (maiúsculas ou minúsculas) -> [0-9A-Ja-j]\r\n\r\n    const formatChars ={\r\n        'A': '[A-Za-z]',\r\n        '0': '[0-9]',\r\n        '#': '[0-9A-Ja-j]',\r\n    }\r\n\r\n    // Máscara de entrada para a placa\r\n    const placaMask = 'AAA-0#00'\r\n\r\n    // Máscara para CPF: '000.000.000-00'\r\n    // Máscara para CNPJ: '00.000.000/0000-00'\r\n\r\n    const [karango, setKarango] = useState({\r\n        id: null,\r\n        marca: '',\r\n        modelo: '',\r\n        cor: '',\r\n        ano_fabricacao: (new Date()).getFullYear(), // Ano corrente\r\n        importado: '0',\r\n        placa: '',\r\n        preco: 0\r\n    })\r\n\r\n    const [currentId, setCurrentId] = useState()\r\n\r\n    const [importadoChecked, setImportadoChecked] = useState(false)\r\n\r\n    const [sendBtnStatus, setSendBtnStatus] = useState({\r\n        disabled: false,\r\n        label: 'Enviar'\r\n    })  \r\n\r\n    const [sbStatus, setSbStatus] = useState({\r\n        open: false,\r\n        severity: 'success',\r\n        message: ''\r\n    })\r\n\r\n    const [error, setError] = useState({\r\n        marca: '',\r\n        modelo: '',\r\n        cor: '',\r\n        placa: '',\r\n        preco: ''\r\n    })\r\n\r\n    const [isModified, setIsModified] = useState(false)\r\n\r\n    const [dialogOpen, setDialogOpen] = useState(false) // O diálogo de confirmação está aberto?\r\n\r\n    const [title, setTitle] = useState('Cadastrar novo karango')\r\n\r\n    const history = useHistory()\r\n    const params = useParams()\r\n\r\n    // useEffect() para quando o formulário for carregado (só na inicialização)\r\n    useEffect(() => {\r\n        // Verificamos se a rota atual contém o parâmetro id\r\n        // Em caso positivo, buscamos os dados no back-end e carregamos o formulário para edição\r\n        if(params.id) {\r\n        setTitle('Editar karango')\r\n        getData(params.id)\r\n        }\r\n    }, [])\r\n\r\n    async function getData(id) {\r\n        try {\r\n          let response = await axios.get(`https://api.faustocintra.com.br/karangos/${id}`)\r\n          setKarango(response.data)\r\n        }\r\n        catch(error) {\r\n          setSbStatus({\r\n            open: true,\r\n            severity: 'error',\r\n            message: 'Não foi possível carregar os dados para edição.'\r\n          })\r\n        }\r\n    }\r\n\r\n    function handleInputChange(event, property) {\r\n\r\n        const karangoTemp = {...karango}\r\n    \r\n        setCurrentId(event.target.id)\r\n        if(event.target.id) property = event.target.id\r\n    \r\n        if(property === 'importado') {\r\n          const newState = ! importadoChecked // Inverte o valor\r\n          if(newState) karangoTemp.importado = '1'\r\n          else karangoTemp.importado = '0'\r\n          setImportadoChecked(newState) \r\n        }\r\n        else if(property === 'placa') {\r\n          karangoTemp.placa = event.target.value.toUpperCase()\r\n        }\r\n        else {\r\n          // Quando o nome de uma propriedade de objeto aparece entre [],\r\n          // significa que o nome da propriedade será determinado pela\r\n          // variável ou expressão contida dentro dos colchetes\r\n          karangoTemp[property] = event.target.value\r\n        }\r\n\r\n        setKarango(karangoTemp)\r\n        setIsModified(true)   // O formulário foi modificado\r\n        validate(karangoTemp)  // Dispara a validação\r\n    }\r\n    \r\n    function validate(data) {\r\n        let isValid = true\r\n    \r\n        const errorTemp = {\r\n          marca: '',\r\n          modelo: '',\r\n          cor: '',\r\n          placa: '',\r\n          preco: ''\r\n        }\r\n\r\n        // trim(): retira espaços em branco do início e do final de uma string\r\n        if(data.marca.trim() === '') {\r\n            errorTemp.marca = 'A marca deve ser preenchida'\r\n            isValid = false\r\n        }     \r\n    \r\n        if(data.modelo.trim() === '') {\r\n            errorTemp.modelo = 'O modelo deve ser preenchido'\r\n            isValid = false\r\n        }\r\n    \r\n        if(data.cor.trim() === '') {\r\n            errorTemp.cor = 'A cor deve ser informada'\r\n            isValid = false\r\n        }\r\n    \r\n        // A placa não pode ser string vazia nem conter sublinhado\r\n        if(data.placa.trim() === '' || data.placa.includes('_')) {\r\n            errorTemp.placa = 'A placa deve ser preenchida corretamente'\r\n            isValid = false\r\n        }\r\n    \r\n        // O preço deve ser numérico e maior que zero\r\n        if(isNaN(data.preco) || Number(data.preco) <= 0) {\r\n            errorTemp.preco = 'O preço deve ser informado e maior que zero'\r\n            isValid = false\r\n        }\r\n  \r\n        setError(errorTemp)\r\n        return isValid\r\n    }\r\n\r\n    async function saveData() {\r\n        try {\r\n          // Desabilita o botão de enviar para evitar envios duplicados\r\n          setSendBtnStatus({disabled: true, label: 'Enviando...'})\r\n          \r\n          // Se estivermos editando, precisamos enviar os dados com o verbo HTTP PUT\r\n          if(params.id) await axios.put(`https://api.faustocintra.com.br/karangos/${params.id}`, karango)\r\n          // Senão, estaremos criando um novo registro, e o verbo HTTP a ser usado é o POST\r\n          else await axios.post('https://api.faustocintra.com.br/karangos', karango)\r\n          \r\n          // Mostra a SnackBar\r\n          setSbStatus({open: true, severity: 'success', message: 'Dados salvos com sucesso!'})\r\n          \r\n        }\r\n        catch(error) {\r\n          // Mostra a SnackBar\r\n          setSbStatus({open: true, severity: 'error', message: 'ERRO: ' + error.message})\r\n        }\r\n        // Restaura o estado inicial do botão de envio\r\n        setSendBtnStatus({disabled: false, label: 'Enviar'})\r\n    }\r\n    \r\n      function handleSubmit(event) {\r\n    \r\n        event.preventDefault()    // Evita que a página seja recarregada\r\n    \r\n        // Só envia para o banco de dados se o formulário for válido\r\n        if(validate(karango)) saveData()\r\n    \r\n      }\r\n    \r\n      function handleSbClose() {\r\n        setSbStatus({...sbStatus, open: false})\r\n    \r\n        // Retorna para a página de listagem em caso de sucesso\r\n        if(sbStatus.severity === 'success') history.push('/list')\r\n      }\r\n    \r\n      function handleDialogClose(result) {\r\n        setDialogOpen(false)\r\n    \r\n        // Se o usuário concordou em voltar \r\n        if(result) history.push('/list')\r\n      }\r\n    \r\n      function handleGoBack() {\r\n        // Se o formulário tiver sido modificado, exibimos o diálogo de confirmação\r\n        if(isModified) setDialogOpen(true)\r\n        // Senão, podemos voltar diretamente para a listagem\r\n        else history.push('/list')\r\n      }\r\n\r\n    return (\r\n        <>\r\n\r\n            <ConfirmDialog isOpen={dialogOpen} onClose={handleDialogClose}>\r\n                Há dados não salvos. Deseja realmente voltar?\r\n            </ConfirmDialog>\r\n\r\n            <Snackbar open={sbStatus.open} autoHideDuration={6000} onClose={handleSbClose}>\r\n                <MuiAlert elevation={6} variant=\"filled\" onClose={handleSbClose} severity={sbStatus.severity}>\r\n                    {sbStatus.message}\r\n                </MuiAlert>\r\n            </Snackbar>\r\n\r\n      \r\n            <h1>{title}</h1>\r\n            <form className={classes.form} onSubmit={handleSubmit}>\r\n\r\n                <TextField \r\n                    id=\"marca\"\r\n                    label=\"Marca\"\r\n                    variant=\"filled\"\r\n                    value={karango.marca}\r\n                    onChange={handleInputChange}\r\n                    required  // not null =. significa que esse campo é obrigatório \r\n                    placeholder=\"Informe a marca do veículo\"\r\n                    fullWidth\r\n                    error={error.marca !== ''}\r\n                    helperText={error.marca}\r\n                />\r\n\r\n                <TextField \r\n                    id=\"modelo\"\r\n                    label=\"Modelo\"\r\n                    variant=\"filled\"\r\n                    value={karango.modelo}\r\n                    onChange={handleInputChange}\r\n                    required  // not null =. significa que esse campo é obrigatório \r\n                    placeholder=\"Informe o modelo do veículo\"\r\n                    fullWidth\r\n                    error={error.modelo !== ''}\r\n                    helperText={error.modelo}\r\n                />\r\n\r\n                <TextField \r\n                    id=\"cor\"\r\n                    label=\"Cor\"\r\n                    variant=\"filled\"\r\n                    value={karango.cor}\r\n                    onChange={(event) => handleInputChange(event, 'cor')}\r\n                    required  // not null =. significa que esse campo é obrigatório \r\n                    placeholder=\"Informe a cor do veículo\"\r\n                    select\r\n                    fullWidth\r\n                    error={error.cor !== ''}\r\n                    helperText={error.cor}\r\n                >\r\n                    { colors.map(color => <MenuItem value={color}>{color}</MenuItem>)}\r\n                </TextField>\r\n\r\n                <TextField \r\n                    id=\"ano_fabricacao\"\r\n                    label=\"Ano de Fabricação\"\r\n                    variant=\"filled\"\r\n                    value={karango.ano_fabricacao}\r\n                    onChange={(event) => handleInputChange(event, 'ano_fabricacao')}\r\n                    required  // not null =. significa que esse campo é obrigatório \r\n                    placeholder=\"Informe o ano de fabricação do veículo\"\r\n                    select\r\n                    fullWidth\r\n                >\r\n                    { years.map(year => <MenuItem value={year}>{year}</MenuItem>)}\r\n                </TextField>\r\n\r\n                <FormControl fullWidth>\r\n                    <FormControlLabel control={\r\n                        <Checkbox\r\n                            id=\"importado\"\r\n                            checked={importadoChecked}\r\n                            onChange={handleInputChange}\r\n                            // removida a cor do checkBox -> color=\"primary\"\r\n                        />\r\n                        }\r\n                        label=\"Importado?\"\r\n                    />\r\n                </FormControl>\r\n\r\n                <InputMask\r\n                    id=\"placa\"\r\n                    mask={placaMask}\r\n                    formatChars={formatChars}\r\n                    value={karango.placa}\r\n                    onChange={(event) => handleInputChange(event, 'placa')}\r\n                >\r\n                    {() => <TextField  \r\n                        label=\"Placa\"\r\n                        variant=\"filled\"\r\n                        required  // not null =. significa que esse campo é obrigatório \r\n                        placeholder=\"Informe a placa do veículo\"\r\n                        fullWidth\r\n                        error={error.placa !== ''}\r\n                        helperText={error.placa}\r\n                    />}\r\n                </InputMask>\r\n\r\n                <TextField \r\n                    id=\"preco\"\r\n                    label=\"Preço\"\r\n                    variant=\"filled\" \r\n                    value={karango.preco}\r\n                    onChange={handleInputChange}\r\n                    required  // not null =. significa que esse campo é obrigatório \r\n                    placeholder=\"Informe o valor do veículo\"\r\n                    fullWidth\r\n                    type=\"number\"\r\n                    onFocus={event => event.target.select()} // Seleciona o conteúdo ao focar\r\n                    InputProps={{\r\n                        startAdornment: <InputAdornment position=\"start\">R$</InputAdornment>,\r\n                    }}\r\n                    error={error.preco !== ''}\r\n                    helperText={error.preco}\r\n                />\r\n\r\n                <Toolbar className={classes.toolbar}>\r\n                    <Button \r\n                            type=\"submit\"\r\n                            variant=\"contained\"\r\n                            color=\"secondary\"\r\n                            disabled={sendBtnStatus.disabled}>\r\n                        {sendBtnStatus.label}\r\n                        \r\n                    </Button>\r\n                    <Button variant=\"contained\" onClick={handleGoBack}>Voltar</Button>\r\n                </Toolbar>\r\n\r\n\r\n                {/*\r\n                <div>\r\n                \r\n                    {JSON.stringify(karango)}\r\n                    <br />\r\n                    currentId: {JSON.stringify(currentId)}\r\n                    <br />\r\n                    isModified: {JSON.stringify(isModified)}\r\n\r\n                </div>\r\n                */}\r\n\r\n\r\n            </form>\r\n        </>\r\n    )\r\n}","/*\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\nimport Button from '@material-ui/core/Button'\r\n*/\r\n\r\n/*\r\n  <div className=\"App\">\r\n    <header className=\"App-header\">\r\n      <h1>Projeto Karangos</h1>\r\n      <Button variant=\"contained\" color=\"primary\">Clique aqui</Button>\r\n      <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n      <p>\r\n        Edit <code>src/App.js</code> and save to reload.\r\n      </p>\r\n      <a\r\n        className=\"App-link\"\r\n        href=\"https://reactjs.org\"\r\n        target=\"_blank\"\r\n        rel=\"noopener noreferrer\"\r\n      >\r\n        Learn React\r\n      </a>\r\n    </header>\r\n  </div>\r\n\r\n*/\r\nimport { createMuiTheme , ThemeProvider} from '@material-ui/core/styles';\r\nimport yellow from '@material-ui/core/colors/yellow';\r\nimport pink from '@material-ui/core/colors/pink';\r\nimport TopBar from './ui/TopBar'\r\nimport FooterBar from './ui/FooterBar'\r\nimport Box from '@material-ui/core/Box';\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\nimport KarangosList from './routed/KarangosList2';\r\nimport KarangosForm from './routed/KarangosForm';\r\n\r\n\r\n// define globalmente as cores primárias e secundárias do projeto\r\n// utilizamos os endereços de documentação:\r\n// https://material-ui.com/pt/customization/theming/\r\n// https://www.materialpalette.com/colors\r\n// https://paletton.com/#uid=21C0u0koBw0eNKOk6C3uKu5vsmQ\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    type: 'dark',\r\n    primary: {\r\n      main: yellow[500],\r\n    },\r\n    secondary: {\r\n      main: pink[500],\r\n    },\r\n  },\r\n});\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n  main: {\r\n    backgroundColor: theme.palette.background.default,\r\n    paddingBottom: '42px', // evita que o footer cubra o conteúdo\r\n    minHeight: '100vh', // 100% da altura da área de visualização\r\n  },\r\n  routed: {\r\n    padding: '25px',\r\n    color: theme.palette.text.primary,\r\n    fontFamily: theme.typography.fontFamily\r\n  }\r\n\r\n}))\r\n\r\nfunction Main() {\r\n  const classes = useStyles()\r\n\r\n    return (\r\n \r\n      <Box className={classes.main}> {/* altera as cores primárias e secundárias ThemeProvider */}\r\n          \r\n          <BrowserRouter> {/* inicia a região onde pode haver troca dinâmica de elementos\r\n            - links e demais elementos dinâmicos tem que estar dentro */}\r\n\r\n            <TopBar />\r\n            <Box id=\"routed\" className={classes.routed}>\r\n              <Switch> {/* Determina o elemento que será exibido, de acordo com a rota. */}\r\n\r\n                <Route path=\"/list\">\r\n                  <KarangosList />\r\n                </Route>\r\n\r\n                <Route path=\"/new\">\r\n                  <KarangosForm />\r\n                </Route>\r\n\r\n               {/* :id é um parâmetro (espécie de variável de rota) */}\r\n                <Route path=\"/edit/:id\">\r\n                  <KarangosForm />\r\n                </Route>\r\n\r\n              </Switch>\r\n\r\n            </Box>\r\n            <FooterBar /> {/* também pode ser exibido assim fechando a tag na abertura mesmo. */}\r\n          \r\n          </BrowserRouter>\r\n      </Box>\r\n    )\r\n  }\r\n\r\nfunction App() {\r\n\r\n  return (\r\n    <> {/* fragment para exibir mais de um Componente/Elemento */}\r\n\r\n    {/* altera as cores primárias e secundárias ThemeProvider, recebendo do -> const theme = createMuiTheme */}\r\n    {/* const useStyles = makeStyles((theme) também trabalha estilos do tema */}\r\n\r\n      <ThemeProvider theme={theme}>\r\n        <Main />\r\n      </ThemeProvider>\r\n\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}